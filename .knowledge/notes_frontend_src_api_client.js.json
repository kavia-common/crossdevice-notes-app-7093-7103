{"is_source_file": true, "format": "JavaScript", "description": "This file defines a client-side API wrapper for a notes application, providing functions for authentication and note management via HTTP requests to a backend API. It handles token-based authentication, response parsing, and exposes API methods for login, registration, note CRUD operations, and user info.", "external_files": ["js-cookie"], "external_methods": ["Cookies.get", "Cookies.set", "Cookies.remove"], "published": ["getApiBase", "AuthApi", "NotesApi"], "classes": [], "methods": [{"name": "getApiBase()", "description": "Returns the configured API base URL, which is used for API calls.", "scope": "", "scopeKind": ""}, {"name": "apiFetch(path, { method = 'GET', body, headers = {}, auth = true } = {})", "description": "A generic wrapper around fetch for making API requests, handling headers, response parsing, and token persistence.", "scope": "", "scopeKind": ""}, {"name": "getAuthHeader()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "handleJsonResponse(res)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["fetch", "Cookies.get", "Cookies.set", "Cookies.remove", "handleJsonResponse"], "search-terms": ["client API", "auth token cookie", "notes CRUD", "fetch wrapper", "React environment variable"], "state": 2, "file_id": 13, "knowledge_revision": 27, "git_revision": "", "ctags": [{"_type": "tag", "name": "API_BASE", "path": "/home/kavia/workspace/code-generation/crossdevice-notes-app-7093-7103/notes_frontend/src/api/client.js", "pattern": "/^const API_BASE = (process.env.REACT_APP_API_BASE || FALLBACK_API_BASE).replace(\\/\\\\\\/+$\\/, '');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "AuthApi", "path": "/home/kavia/workspace/code-generation/crossdevice-notes-app-7093-7103/notes_frontend/src/api/client.js", "pattern": "/^export const AuthApi = {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "Content-Type", "path": "/home/kavia/workspace/code-generation/crossdevice-notes-app-7093-7103/notes_frontend/src/api/client.js", "pattern": "/^    'Content-Type': 'application\\/json',$/", "language": "JavaScript", "kind": "property", "scope": "apiFetch.h", "scopeKind": "class"}, {"_type": "tag", "name": "FALLBACK_API_BASE", "path": "/home/kavia/workspace/code-generation/crossdevice-notes-app-7093-7103/notes_frontend/src/api/client.js", "pattern": "/^const FALLBACK_API_BASE = 'http:\\/\\/localhost:3001'; \\/\\/ For local development only$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "NotesApi", "path": "/home/kavia/workspace/code-generation/crossdevice-notes-app-7093-7103/notes_frontend/src/api/client.js", "pattern": "/^export const NotesApi = {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "apiFetch", "path": "/home/kavia/workspace/code-generation/crossdevice-notes-app-7093-7103/notes_frontend/src/api/client.js", "pattern": "/^export async function apiFetch(path, { method = 'GET', body, headers = {}, auth = true } = {}) {$/", "language": "JavaScript", "kind": "function", "signature": "(path, { method = 'GET', body, headers = {}, auth = true } = {})"}, {"_type": "tag", "name": "create", "path": "/home/kavia/workspace/code-generation/crossdevice-notes-app-7093-7103/notes_frontend/src/api/client.js", "pattern": "/^  create: (payload) => apiFetch('\\/notes', { method: 'POST', body: payload, auth: true }),$/", "language": "JavaScript", "kind": "property", "scope": "NotesApi", "scopeKind": "class"}, {"_type": "tag", "name": "getApiBase", "path": "/home/kavia/workspace/code-generation/crossdevice-notes-app-7093-7103/notes_frontend/src/api/client.js", "pattern": "/^export function getApiBase() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "getAuthHeader", "path": "/home/kavia/workspace/code-generation/crossdevice-notes-app-7093-7103/notes_frontend/src/api/client.js", "pattern": "/^function getAuthHeader() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "h", "path": "/home/kavia/workspace/code-generation/crossdevice-notes-app-7093-7103/notes_frontend/src/api/client.js", "pattern": "/^  const h = {$/", "language": "JavaScript", "kind": "class", "scope": "apiFetch", "scopeKind": "class"}, {"_type": "tag", "name": "handleJsonResponse", "path": "/home/kavia/workspace/code-generation/crossdevice-notes-app-7093-7103/notes_frontend/src/api/client.js", "pattern": "/^async function handleJsonResponse(res) {$/", "language": "JavaScript", "kind": "function", "signature": "(res)"}, {"_type": "tag", "name": "list", "path": "/home/kavia/workspace/code-generation/crossdevice-notes-app-7093-7103/notes_frontend/src/api/client.js", "pattern": "/^  list: () => apiFetch('\\/notes', { method: 'GET', auth: true }),$/", "language": "JavaScript", "kind": "property", "scope": "NotesApi", "scopeKind": "class"}, {"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/crossdevice-notes-app-7093-7103/notes_frontend/src/api/client.js", "pattern": "/^  login: (email, password) => apiFetch('\\/auth\\/login', { method: 'POST', body: { email, passwor/", "language": "JavaScript", "kind": "property", "scope": "AuthApi", "scopeKind": "class"}, {"_type": "tag", "name": "logout", "path": "/home/kavia/workspace/code-generation/crossdevice-notes-app-7093-7103/notes_frontend/src/api/client.js", "pattern": "/^  logout: async () => {$/", "language": "JavaScript", "kind": "property", "scope": "AuthApi", "scopeKind": "class"}, {"_type": "tag", "name": "me", "path": "/home/kavia/workspace/code-generation/crossdevice-notes-app-7093-7103/notes_frontend/src/api/client.js", "pattern": "/^  me: () => apiFetch('\\/auth\\/me', { method: 'GET', auth: true }),$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "register", "path": "/home/kavia/workspace/code-generation/crossdevice-notes-app-7093-7103/notes_frontend/src/api/client.js", "pattern": "/^  register: (email, password) => apiFetch('\\/auth\\/register', { method: 'POST', body: { email, p/", "language": "JavaScript", "kind": "property", "scope": "AuthApi", "scopeKind": "class"}, {"_type": "tag", "name": "remove", "path": "/home/kavia/workspace/code-generation/crossdevice-notes-app-7093-7103/notes_frontend/src/api/client.js", "pattern": "/^  remove: (id) => apiFetch(`\\/notes\\/${encodeURIComponent(id)}`, { method: 'DELETE', auth: true /", "language": "JavaScript", "kind": "property", "scope": "NotesApi", "scopeKind": "class"}, {"_type": "tag", "name": "update", "path": "/home/kavia/workspace/code-generation/crossdevice-notes-app-7093-7103/notes_frontend/src/api/client.js", "pattern": "/^  update: (id, payload) => apiFetch(`\\/notes\\/${encodeURIComponent(id)}`, { method: 'PUT', body:/", "language": "JavaScript", "kind": "property", "scope": "NotesApi", "scopeKind": "class"}], "hash": "3387ea287f085f78bd2714fc6ab34bdf", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/api/client.js", "fields": [{"name": "'Content-Type': 'application\\/json',", "scope": "apiFetch.h", "scopeKind": "class", "description": "unavailable"}, {"name": "create: (payload) => apiFetch('\\/notes', { method: 'POST', body: payload, auth: true }),", "scope": "NotesApi", "scopeKind": "class", "description": "unavailable"}, {"name": "list: () => apiFetch('\\/notes', { method: 'GET', auth: true }),", "scope": "NotesApi", "scopeKind": "class", "description": "unavailable"}, {"name": "login: (email, password) => apiFetch('\\/auth\\/login', { method: 'POST', body: { email, passwor/", "scope": "AuthApi", "scopeKind": "class", "description": "unavailable"}, {"name": "logout: async () => {", "scope": "AuthApi", "scopeKind": "class", "description": "unavailable"}, {"name": "register: (email, password) => apiFetch('\\/auth\\/register', { method: 'POST', body: { email, p/", "scope": "AuthApi", "scopeKind": "class", "description": "unavailable"}, {"name": "remove: (id) => apiFetch(`\\/notes\\/${encodeURIComponent(id)}`, { method: 'DELETE', auth: true /", "scope": "NotesApi", "scopeKind": "class", "description": "unavailable"}, {"name": "update: (id, payload) => apiFetch(`\\/notes\\/${encodeURIComponent(id)}`, { method: 'PUT', body:/", "scope": "NotesApi", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"27": ""}]}